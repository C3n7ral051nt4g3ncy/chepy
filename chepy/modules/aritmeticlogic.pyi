from ..core import ChepyCore as ChepyCore, ChepyDecorators as ChepyDecorators
from .exceptions import StateNotList as StateNotList
from typing import Any, TypeVar

AritmeticLogicT = TypeVar('AritmeticLogicT', bound='AritmeticLogic')

class AritmeticLogic(ChepyCore):
    def __init__(self, *data: Any) -> None: ...
    state: Any = ...
    def str_bit_shift_right(self, amount: int) -> AritmeticLogicT: ...
    def add(self, n: int) -> AritmeticLogicT: ...
    def subtract(self, n: int) -> AritmeticLogicT: ...
    def multiply(self, n: int) -> AritmeticLogicT: ...
    def divide(self, n: int) -> AritmeticLogicT: ...
    def power(self, n: int) -> AritmeticLogicT: ...
    def sum(self) -> AritmeticLogicT: ...
    def mean(self) -> AritmeticLogicT: ...
    def median(self) -> AritmeticLogicT: ...

from ..core import ChepyCore as ChepyCore, ChepyDecorators as ChepyDecorators
from typing import Any, TypeVar

CompressionT = TypeVar('CompressionT', bound='Compression')

class Compression(ChepyCore):
    def __init__(self, *data: Any) -> None: ...
    state: Any = ...
    def fix_zip_header(self) -> CompressionT: ...
    def zip_info(self) -> CompressionT: ...
    def zip_list_files(self) -> CompressionT: ...
    def unzip_one(self, file: str, password: str=...) -> CompressionT: ...
    def unzip_all(self, password: str=...) -> CompressionT: ...
    def create_zip_file(self, file_name: str) -> CompressionT: ...
    def tar_list_files(self, mode: str=...) -> CompressionT: ...
    def tar_extract_one(self, filename: str, mode: str=...) -> CompressionT: ...
    def tar_extract_all(self, mode: str=...) -> CompressionT: ...
    def tar_compress(self, filename: str, mode: str=...) -> CompressionT: ...
    def gzip_compress(self, file_name: str=...) -> CompressionT: ...
    def gzip_decompress(self) -> CompressionT: ...
    def bzip_compress(self) -> CompressionT: ...
    def bzip_decompress(self) -> CompressionT: ...
    def zlib_compress(self, level: int=...) -> CompressionT: ...
    def zlib_decompress(self) -> CompressionT: ...
    def lzma_compress(self) -> CompressionT: ...
    def lzma_decompress(self) -> CompressionT: ...
    def raw_inflate(self) -> CompressionT: ...
    def raw_deflate(self) -> CompressionT: ...
